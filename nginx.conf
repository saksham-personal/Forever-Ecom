# /etc/nginx/nginx.conf

# Run as the default nginx user
user www-data;

# Adjust worker_processes based on your EC2 instance's core count, 'auto' is usually good.
worker_processes auto;

# File containing the process ID of the main Nginx process
pid /run/nginx.pid;

# Include dynamic modules (usually standard)
include /etc/nginx/modules-enabled/*.conf;

events {
    # Max connections per worker process
    worker_connections 768;
    # multi_accept on; # Can sometimes improve performance under high load
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off; # Hide Nginx version for minor security improvement

    # Include MIME types definition
    include /etc/nginx/mime.types;
    # Default MIME type
    default_type application/octet-stream;

    # SSL Settings (Recommended for Production - enable when setting up HTTPS)
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers on;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings (Compress responses for better performance)
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Virtual Host Configuration
    server {
        # Listen on port 80 for IPv4 and IPv6
        listen 80 default_server;
        listen [::]:80 default_server;

        # Replace '_' with your domain name(s) when you configure DNS
        # e.g., server_name yourdomain.com www.yourdomain.com;
        server_name _;

        # ---- API Backend Proxy ----
        # Forward requests starting with /api/ to the Node.js backend
        location /api/ {
            # IMPORTANT: Change 4000 if your backend runs on a different port!
            proxy_pass http://127.0.0.1:4000;

            # Standard proxy headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade'; # Required for WebSockets if used
            proxy_set_header Host $host; # Pass the original host header
            proxy_set_header X-Real-IP $remote_addr; # Pass the client's real IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Standard proxy header
            proxy_set_header X-Forwarded-Proto $scheme; # Pass the original protocol (http/https)
            proxy_cache_bypass $http_upgrade;
        }

        # ---- Admin Panel Static Files ----
        # Serve requests starting with /admin/ from the admin build directory
        location /admin/ {
            # 'alias' serves content directly from this path for the /admin/ location
            alias /var/www/admin/;
            # Default file to serve
            index index.html index.htm;
            # Handle client-side routing within the admin panel
            # Try the actual file, then directory, then fallback to the admin index.html
            try_files $uri $uri/ /admin/index.html;
        }

        # ---- Frontend Static Files (Root) ----
        # Serve all other requests from the frontend build directory
        location / {
            # 'root' sets the base directory for requests in this block
            root /var/www/frontend;
             # Default file to serve
            index index.html index.htm;
           # Handle client-side routing (React Router)
           # Try the actual file, then directory, then fallback to the main index.html
            try_files $uri $uri/ /index.html;
        }

        # Deny access to hidden files (e.g., .git, .htpasswd, .env)
        location ~ /\. {
                deny all;
                return 404; # Or return 403
        }
    }

    # If you were using separate files in /etc/nginx/sites-enabled/, you would include them here.
    # Since the server block is directly in http{}, commenting this out is fine.
    # include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-enabled/*;
}
